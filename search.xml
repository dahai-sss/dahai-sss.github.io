<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>VUE项目开发中解决“Access-Control-Allow-Origin”跨域问题</title>
      <link href="/VUE%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E4%B8%AD%E8%A7%A3%E5%86%B3%E2%80%9CAccess-Control-Allow-Origin%20%E2%80%9D%20%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
      <url>/VUE%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E4%B8%AD%E8%A7%A3%E5%86%B3%E2%80%9CAccess-Control-Allow-Origin%20%E2%80%9D%20%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="VUE项目开发中解决“Access-Control-Allow-Origin-”-跨域问题"><a href="#VUE项目开发中解决“Access-Control-Allow-Origin-”-跨域问题" class="headerlink" title="VUE项目开发中解决“Access-Control-Allow-Origin ” 跨域问题"></a>VUE项目开发中解决“Access-Control-Allow-Origin ” 跨域问题</h1><h2 id="1-问题产生的背景与分析"><a href="#1-问题产生的背景与分析" class="headerlink" title="1. 问题产生的背景与分析"></a>1. 问题产生的背景与分析</h2><p>​    前端人员在本地开发环境去请求数据api接口，由于运行时项目与api接口不同源（协议相同、域名相同、端口相同），会报“No ‘Access-Control-Allow-Origin’ header is present on the requested resource”。如下模拟本地请求不同源的数据api接口，<a href="http://www.baidu.com代表api接口,现在通过以下代码请求百度的网页的数据./">www.baidu.com代表api接口，现在通过以下代码请求百度的网页的数据。</a></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//由于 main.js 里全局定义的 axios,此处直接使用 this.$axios 即可</span><span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'https://www.baidu.com/'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        window<span class="token punctuation">.</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    window<span class="token punctuation">.</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>则会在网页开发模式看到报错信息，本地项目运行时的网址为：<a href="http://localhost:8080/">http://localhost:8080</a> ,所用的协议为http协议，ip地址为127.0.0.1 ,端口为8080；而数据api接口所在地址为：<a href="https://www.baidu.com,所用的协议为https,ip地址为www.baidu.com(36.152.44.96),端口为80,故会报跨域问题./">https://www.baidu.com,所用的协议为https，ip地址为www.baidu.com(36.152.44.96),端口为80，故会报跨域问题。</a></p><p><img src="..%5Cimages%5Cimage-20211102220314239.png" alt="image-20211102220314239"></p><h2 id="2-如何解决跨域问题"><a href="#2-如何解决跨域问题" class="headerlink" title="2. 如何解决跨域问题"></a>2. 如何解决跨域问题</h2><p>​    解决跨域的方法方式有很多，这里只讨论Vue 解决跨域。Vue解决跨域的原理：<strong>运行时生成一个本地服务器，在请求api接口时将域名发送给本地的服务器（启动vue项目的服务,loclahost:8080），由本地的服务器代理去请求真正的服务器</strong>（备注：只有前端访问后台时，才会存在跨域问题，服务器之间相互请求不存在跨域）。</p><p>​    实现Vue跨域，需要在vue.config.js(在vue-cli3中项目中没有该文件需要自己新建)文件中进行配置，配置代码如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//配置本地服务器信息</span>  devServer<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//配置代理请求信息</span>    proxy<span class="token operator">:</span> <span class="token punctuation">&#123;</span>       <span class="token string">"/api"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 所请求后台的真实地址，真实地址包括协议，主机，端口部分，缺少端口就会访问默认端口。</span>        target<span class="token operator">:</span> <span class="token string">"https://www.baidu.com/"</span><span class="token punctuation">,</span>        <span class="token comment">// 允许跨域</span>        changeOrigin<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token comment">//允许websocket</span>        ws<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token comment">//将地址进行重写</span>        pathRewrite<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//正则匹配，将axios中请求的url地址中以/api字符替换成"",然后接上面在target中所有请求的真实地址后后面做为url地址文件路径</span>          <span class="token string">"^/api"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>         <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>main.js文件中代码如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token comment">//全局定义aixos</span><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$axios <span class="token operator">=</span> axios<span class="token comment">//定义默认baseURL</span>axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>baseURL <span class="token operator">=</span> <span class="token string">'/api'</span>Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  axios<span class="token punctuation">,</span>  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=></span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>app.vue文件中代码如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"testAxios"</span><span class="token operator">></span>TestAxios<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">'app'</span><span class="token punctuation">,</span>   methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token function">testAxios</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 由于 main.js 里全局定义的 axios (Vue.prototype.$axios = axios),此处直接使用 $axios 即可 。</span>                <span class="token comment">// 由于 main.js 里定义了每个请求前缀，由于在main.js中设置了默认的baseurl，则此处的 / 即为 /api/， </span>                <span class="token comment">// 经过 vue.config.js 配置文件的代理设置，会自动转为 https://www.baidu.com/，从而解决跨域问题</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        window<span class="token punctuation">.</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    window<span class="token punctuation">.</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'请求失败'</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  components<span class="token operator">:</span> <span class="token punctuation">&#123;</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>项目运行时的界面，当点击testAxios按钮发送请求时，就可以看见console中打印出的返回内容。</p><p><img src="..%5Cimages%5Cimage-20211106140406977.png" alt="image-20211106140406977"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
